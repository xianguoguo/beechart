<?xml version="1.0" encoding="utf-8"?>
<!--
     各个图表编辑区域的子界面主体
-->
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
                      xmlns:s="library://ns.adobe.com/flex/spark"
                      xmlns:mx="library://ns.adobe.com/flex/mx"
                      creationComplete="creationCompleteHandler(event)">
    <s:layout>
        <s:BasicLayout/>
    </s:layout>
    <fx:Metadata>
		[Event(name="styleChange",type="events.StyleChangeEvent")]
	</fx:Metadata>
    <fx:Script>
        <![CDATA[
            import bee.chart.builder.events.BuilderEvent;
            import bee.chart.builder.events.StyleChangeEvent;
            import bee.chart.builder.utils.ChartStyleSetting;
            
            import mx.events.FlexEvent;
            
            protected function creationCompleteHandler(event:FlexEvent):void
            {
                this.addEventListener(BuilderEvent.RESET, resetHandler);
                this.addEventListener(BuilderEvent.SELECTED, selectedHandler);
                //监听css改变，执行默认设置
                ChartStyleSetting.getInstance().addEventListener(StyleChangeEvent.CSS_CHANGE, cssChangeHandler);
                defalutSetting();
            }
            
            /**
             * 切换图表类型,子界面接受到事件的回调函数
             * */
            private function resetHandler(event:BuilderEvent):void
            {
                defalutSetting();
            }
            
            /**
             * 子界面被选中时，分发的事件
             * */
            private function selectedHandler(event:BuilderEvent):void
            {
                defalutSetting();
            }
            
            /**
             * 监听css改变，执行默认设置
             * */
            protected function cssChangeHandler(event:StyleChangeEvent):void
            {
                defalutSetting();
            }
            
            /**
             * 图表编辑子界面的默认设置，子界面根据需要进行重写
             * */
            protected function defalutSetting():void
            {
            
            }
            
            /***
             * 分发StyleChangeEvent事件.
             */
            protected function dispatchStyleChangeEvent(styleName:String, styleObject:Object):void
            {
                dispatchEvent(new StyleChangeEvent(StyleChangeEvent.STYLE_CHANGE, styleName, styleObject, true, false));
            }
        ]]>
    </fx:Script>
    <fx:Declarations>
        <!-- 将非可视元素（例如服务、值对象）放在此处 -->
    </fx:Declarations>
</s:SkinnableContainer>
