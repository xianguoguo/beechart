<?xml version="1.0" encoding="utf-8"?>
<!--
     编辑器通用List组件
-->
<s:List xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        borderAlpha="0"
        buttonMode="true"
        itemRenderer="cn.alibaba.yid.chart.builder.components.base.ImageLabelItemRenderer"
        creationComplete="creationCompleteHandler(event)"
        change="list1_changeHandler(event)">
    <s:layout>
        <s:TileLayout>
            <s:verticalGap>2</s:verticalGap>
            <s:horizontalGap>2</s:horizontalGap>
            <s:requestedColumnCount>4</s:requestedColumnCount>
        </s:TileLayout>
    </s:layout>
    <fx:Declarations>
        <!-- 将非可视元素（例如服务、值对象）放在此处 -->
    </fx:Declarations>
    <fx:Script>
        <![CDATA[
            import mx.events.FlexEvent;
            import mx.events.ItemClickEvent;
            
            import spark.events.IndexChangeEvent;
            /**
             * itemRenderer点击的回调函数，需要外部定义.
             * */
            public var itemClickHanlder:Function;
            /**
             * change事件是否处理过，放置change事件和itemClick同时发生，导致改变发生两次。
             * */
            private var _isChangeHandle:Boolean = false;
            
            protected function creationCompleteHandler(event:FlexEvent):void
            {
                if (itemClickHanlder == null)
                {
                    itemClickHanlder = new Function();
                }
                addEventListener(ItemClickEvent.ITEM_CLICK, list_ItemClickHanlder);
            }
            
            protected function list_ItemClickHanlder(event:ItemClickEvent):void
            {
                if (!_isChangeHandle)
                {
                    itemClickHanlder(event);
                }
                _isChangeHandle = false;
            }
            
            /**
             * 所选内容已更改后分派事件。
             * 保证用户使用键盘操作改变所选内容，执行正常。
             * */
            protected function list1_changeHandler(event:IndexChangeEvent):void
            {
                var newIndex:int = event.newIndex;
                var data:Object = dataProvider.getItemAt(newIndex);
                var itemClickEvent:ItemClickEvent = new ItemClickEvent(ItemClickEvent.ITEM_CLICK, true, false, null, newIndex, null, data);
                itemClickHanlder(itemClickEvent);
                _isChangeHandle = true;
            }
        ]]>
    </fx:Script>
</s:List>
