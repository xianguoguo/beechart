<?xml version="1.0" encoding="utf-8"?>
<!--
     图表大小设置界面
-->
<base:EditorChildBase xmlns:fx="http://ns.adobe.com/mxml/2009"
                      xmlns:s="library://ns.adobe.com/flex/spark"
                      xmlns:mx="library://ns.adobe.com/flex/mx"
                      xmlns:base="cn.alibaba.yid.chart.builder.components.base.*">
    <fx:Script>
        <![CDATA[
            import mx.events.FlexEvent;
        ]]>
    </fx:Script>
    <fx:Declarations>
        <!-- 将非可视元素（例如服务、值对象）放在此处 -->
    </fx:Declarations>
    <fx:Script>
        <![CDATA[
            import bee.chart.builder.utils.ChartStyleSetting;
            
            //设定宽度
            public var chartWidth:Number = 0;
            //设定高度
            public var chartHeight:Number = 0;
            
            /**
             * 重写defalutSetting()函数，设置默认设置
             * */
            override protected function defalutSetting():void
            {
                super.defalutSetting();
                var styleSetting:ChartStyleSetting = ChartStyleSetting.getInstance();
                var chartStyleObject:Object = styleSetting.getStyle("chart");
                if (chartWidth)
                {
                    widthTextInput.text = chartWidth + "";
                }
                if (chartHeight)
                {
                    heightTextInput.text = chartHeight + "";
                }
                if (chartStyleObject)
                {
                    //图表大小
                    var chartWidthStr:String = chartStyleObject["chartWidth"];
                    if (chartWidthStr)
                    {
                        var chartWidthNum:Number = Number(chartWidthStr);
                        if (chartWidthNum)
                        {
                            widthTextInput.text = chartWidthNum + "";
                        }
                    }
                    
                    //图表大小
                    var chartHeightStr:String = chartStyleObject["chartHeight"];
                    if (chartHeightStr)
                    {
                        var chartHeightNum:Number = Number(chartHeightStr);
                        if (chartHeightNum)
                        {
                            heightTextInput.text = chartHeightNum + "";
                        }
                    }
                }
            }
            
            protected function widthTextInput_enterHandler(event:FlexEvent):void
            {
                var txt:String = widthTextInput.text;
                var num:Number = Number(txt);
                if (num < widthHSlider.minimum)
                {
                    widthTextInput.text = String(widthHSlider.minimum);
                }
                else if (num > widthHSlider.maximum)
                {
                    widthTextInput.text = String(widthHSlider.maximum);
                }
                else
                {
                    widthTextInput.text = String(widthHSlider.value);
                }
                var styleObject:Object = {"chartWidth": widthHSlider.value, "chartHeight": heightHSlider.value};
                dispatchStyleChangeEvent("chart", styleObject);
            }
            
            
            protected function widthHSlider_changeEndHandler(event:FlexEvent):void
            {
                var styleObject:Object = {"chartWidth": widthHSlider.value, "chartHeight": heightHSlider.value};
                dispatchStyleChangeEvent("chart", styleObject);
            }
            
            
            protected function heightTextInput_enterHandler(event:FlexEvent):void
            {
                
                var txt:String = heightTextInput.text;
                var num:Number = Number(txt);
                if (num < heightHSlider.minimum)
                {
                    heightTextInput.text = String(heightHSlider.minimum);
                }
                else if (num > heightHSlider.maximum)
                {
                    heightTextInput.text = String(heightHSlider.maximum);
                }
                else
                {
                    heightTextInput.text = String(heightHSlider.value);
                }
                trace("radiusTextInput_enterHandler", heightTextInput.text);
                var styleObject:Object = {"chartWidth": widthHSlider.value, "chartHeight": heightHSlider.value};
                dispatchStyleChangeEvent("chart", styleObject);
            }
            
            
            protected function heightHSlider_changeEndHandler(event:FlexEvent):void
            {
                
                trace("heightHSlider_changeEndHandler", heightHSlider.value);
                var styleObject:Object = {"chartWidth": widthHSlider.value, "chartHeight": heightHSlider.value};
                dispatchStyleChangeEvent("chart", styleObject);
            }
        ]]>
    </fx:Script>
    <mx:Grid verticalGap="18"
             horizontalGap="0"
             width="100%"
             height="100%">
        <mx:GridRow width="100%">
            <mx:GridItem width="100%">
                <base:TitleLabelContainer width="100%"
                                          text="图表大小"/>
            </mx:GridItem>
        </mx:GridRow>
        <mx:GridRow width="100%">
            <mx:GridItem width="100%"
                         paddingLeft="8">
                <s:Group width="100%"
                         height="100%">
                    <s:layout>
                        <s:VerticalLayout/>
                    </s:layout>
                    <s:Group>
                        <s:layout>
                            <s:HorizontalLayout/>
                        </s:layout>
                        <s:Label text="宽"/>
                        <s:TextInput id="widthTextInput"
                                     restrict="[0-9]"
                                     text="{widthHSlider.value}"
                                     enter="widthTextInput_enterHandler(event)">
                        </s:TextInput>

                        <s:Label text="px"/>
                    </s:Group>
                    <s:HSlider id="widthHSlider"
                               width="80%"
                               value="{Number(widthTextInput.text)}"
                               changeEnd="widthHSlider_changeEndHandler(event)">
                        <s:minimum>300</s:minimum>
                        <s:maximum>800</s:maximum>
                    </s:HSlider>

                    <s:Group>
                        <s:layout>
                            <s:HorizontalLayout/>
                        </s:layout>
                        <s:Label text="高"/>
                        <s:TextInput id="heightTextInput"
                                     restrict="[0-9]"
                                     text="{heightHSlider.value}"
                                     enter="heightTextInput_enterHandler(event)"/>
                        <s:Label text="px"/>
                    </s:Group>
                    <s:HSlider id="heightHSlider"
                               width="80%"
                               value="{Number(heightTextInput.text)}"
                               changeEnd="heightHSlider_changeEndHandler(event)">
                        <s:minimum>200</s:minimum>
                        <s:maximum>500</s:maximum>
                    </s:HSlider>
                </s:Group>
            </mx:GridItem>
        </mx:GridRow>
    </mx:Grid>
</base:EditorChildBase>
